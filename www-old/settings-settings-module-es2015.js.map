{"version":3,"sources":["./src/app/settings/settings.page.html","./src/app/local-notifications.service.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.page.scss","./src/app/settings/settings.page.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-icon name=\\\"notifications-outline\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Enable Notifications</ion-label>\\n    <ion-toggle (ionChange)=\\\"settingsChanged()\\\" [(ngModel)]=\\\"resources.notification\\\" color=\\\"success\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item>\\n    <ion-icon name=\\\"moon\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Dark Mode</ion-label>\\n    <ion-toggle (ionChange)=\\\"settingsChanged()\\\" id=\\\"themeToggle\\\" [(ngModel)]=\\\"resources.darkMode\\\" color=\\\"success\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item (click)=\\\"changePassword()\\\">\\n    <ion-icon name=\\\"lock\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Change Password</ion-label>\\n  </ion-item>\\n  <ion-item (click)=\\\"logout()\\\">\\n    <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Logout</ion-label>\\n  </ion-item>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Platform } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalNotificationsService {\n\n  constructor(private localNotifications: LocalNotifications,\n    private platform: Platform) { }\n\n  makeNotifications(time = new Date(), text, id) {\n    console.log(time)\n    // console.log(\"makeNotifications\")\n    // //Schedule a single notification\n    // this.localNotifications.schedule({\n    //   id: 1,\n    //   text: 'Fasting about to end',\n    //   sound: this.platform.is(\"android\") ? 'file://sound.mp3' : 'file://beep.caf',\n    //   data: { secret: \"\" }\n    // });\n\n\n    // Schedule multiple notifications\n    // this.localNotifications.schedule([{\n    //    id: 1,\n    //    text: 'Multi ILocalNotification 1',\n    //    sound: this.platform.is(\"android\") ? 'file://sound.mp3': 'file://beep.caf',\n    //    data: { secret:\"\" }\n    //   },{\n    //    id: 2,\n    //    title: 'Local ILocalNotification Example',\n    //    text: 'Multi ILocalNotification 2',\n    //    icon: 'http://example.com/icon.png'\n    // }]);\n\n\n    // Schedule delayed notification\n    this.localNotifications.schedule({\n      id: id,\n      text: text,\n      //new Date().getTime() + 3600) \n      trigger: { at: time },\n      led: 'FF0000',\n      foreground: true,\n      sound: this.platform.is(\"android\") ? 'file://sound.mp3' : 'file://beep.caf'\n    });\n  }\n\n  requestNotifications() {\n    this.localNotifications.hasPermission().then((isPermitted) => {\n      console.log(isPermitted)\n      if (!isPermitted)\n        this.localNotifications.requestPermission().then((isGranted) => {\n          console.log(isGranted)\n        })\n    })\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ResourcesService } from '../shared/resources.service';\nimport { ModalController } from '@ionic/angular';\nimport { PasswordPage } from '../password/password.page';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\nimport { LocalNotificationsService } from '../local-notifications.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit, OnDestroy {\n  constructor(private resources: ResourcesService,\n    private modal: ModalController,\n    private router: Router,\n    private storage: StorageService,\n    private notif: LocalNotificationsService) { \n      console.log(\"Settings constructor\")\n      // this.resources.getSettings().then((res: any) => {\n      //   this.darkMode = res.data.dark\n      //   this.notification = res.data.notifications    \n      //   console.log(this.darkMode, this.notification)\n      //   this.resources.checkDarkTheme(this.darkMode)\n      // })\n    }\n    \n  \n\n  ngOnInit() {\n    if (!this.resources.toggle) this.resources.checkDarkTheme();\n  }\n\n  ngOnDestroy() {\n    // ...\n    console.log(this.resources.darkMode)\n  }\n\n  logout() {\n    this.resources.logout()\n  }\n\n  async changePassword() {\n    const modal = await this.modal.create({\n      component: PasswordPage\n    })\n    modal.present();\n  }\n\n  async settingsChanged() {\n    console.log(this.resources.darkMode)\n    // let st = \"\"\n    // await this.storage.getToken().then((token) => {\n    //   st = token\n    // })\n    if(!this.resources.isLoggedIn.value) {\n      console.log(\"sessionToken not found \")\n      return\n    }    \n    if(this.resources.notification) {\n      this.notif.requestNotifications()\n    } \n    let obj = {\n      settings: {\n        notifications: this.resources.notification ? this.resources.notification : false,\n        dark: this.resources.darkMode ? this.resources.darkMode : false\n      }\n    }\n    console.log(obj)\n    this.resources.updateSettings(obj)\n  }\n\n}\n"],"sourceRoot":"webpack:///"}