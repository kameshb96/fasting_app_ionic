{"version":3,"sources":["src/app/settings/settings.page.html","src/app/local-notifications.service.ts","src/app/settings/settings-routing.module.ts","src/app/settings/settings.module.ts","src/app/settings/settings.page.scss","src/app/settings/settings.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-icon name=\\\"notifications-outline\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Enable Notifications</ion-label>\\n    <ion-toggle (ionChange)=\\\"settingsChanged()\\\" [(ngModel)]=\\\"resources.notification\\\" color=\\\"success\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item>\\n    <ion-icon name=\\\"moon\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Dark Mode</ion-label>\\n    <ion-toggle (ionChange)=\\\"settingsChanged()\\\" id=\\\"themeToggle\\\" [(ngModel)]=\\\"resources.darkMode\\\" color=\\\"success\\\"></ion-toggle>\\n  </ion-item>\\n  <ion-item (click)=\\\"changePassword()\\\">\\n    <ion-icon name=\\\"lock\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Change Password</ion-label>\\n  </ion-item>\\n  <ion-item (click)=\\\"logout()\\\">\\n    <ion-icon name=\\\"log-out\\\"></ion-icon>\\n    <ion-label style=\\\"margin-left: 2%;\\\">Logout</ion-label>\\n  </ion-item>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { Platform } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalNotificationsService {\n\n  constructor(private localNotifications: LocalNotifications,\n    private platform: Platform) { }\n\n  makeNotifications(time = new Date(), text, id) {\n    console.log(time)\n    // console.log(\"makeNotifications\")\n    // //Schedule a single notification\n    // this.localNotifications.schedule({\n    //   id: 1,\n    //   text: 'Fasting about to end',\n    //   sound: this.platform.is(\"android\") ? 'file://sound.mp3' : 'file://beep.caf',\n    //   data: { secret: \"\" }\n    // });\n\n\n    // Schedule multiple notifications\n    // this.localNotifications.schedule([{\n    //    id: 1,\n    //    text: 'Multi ILocalNotification 1',\n    //    sound: this.platform.is(\"android\") ? 'file://sound.mp3': 'file://beep.caf',\n    //    data: { secret:\"\" }\n    //   },{\n    //    id: 2,\n    //    title: 'Local ILocalNotification Example',\n    //    text: 'Multi ILocalNotification 2',\n    //    icon: 'http://example.com/icon.png'\n    // }]);\n\n\n    // Schedule delayed notification\n    this.localNotifications.schedule({\n      id: id,\n      text: text,\n      //new Date().getTime() + 3600) \n      trigger: { at: time },\n      led: 'FF0000',\n      foreground: true,\n      sound: this.platform.is(\"android\") ? 'file://sound.mp3' : 'file://beep.caf'\n    });\n  }\n\n  requestNotifications() {\n    this.localNotifications.hasPermission().then((isPermitted) => {\n      console.log(isPermitted)\n      if (!isPermitted)\n        this.localNotifications.requestPermission().then((isGranted) => {\n          console.log(isGranted)\n        })\n    })\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ResourcesService } from '../shared/resources.service';\nimport { ModalController } from '@ionic/angular';\nimport { PasswordPage } from '../password/password.page';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\nimport { LocalNotificationsService } from '../local-notifications.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit, OnDestroy {\n  constructor(private resources: ResourcesService,\n    private modal: ModalController,\n    private router: Router,\n    private storage: StorageService,\n    private notif: LocalNotificationsService) { \n      console.log(\"Settings constructor\")\n      // this.resources.getSettings().then((res: any) => {\n      //   this.darkMode = res.data.dark\n      //   this.notification = res.data.notifications    \n      //   console.log(this.darkMode, this.notification)\n      //   this.resources.checkDarkTheme(this.darkMode)\n      // })\n    }\n    \n  \n\n  ngOnInit() {\n    if (!this.resources.toggle) this.resources.checkDarkTheme();\n  }\n\n  ngOnDestroy() {\n    // ...\n    console.log(this.resources.darkMode)\n  }\n\n  logout() {\n    this.resources.logout()\n  }\n\n  async changePassword() {\n    const modal = await this.modal.create({\n      component: PasswordPage\n    })\n    modal.present();\n  }\n\n  async settingsChanged() {\n    console.log(this.resources.darkMode)\n    // let st = \"\"\n    // await this.storage.getToken().then((token) => {\n    //   st = token\n    // })\n    if(!this.resources.isLoggedIn.value) {\n      console.log(\"sessionToken not found \")\n      return\n    }    \n    if(this.resources.notification) {\n      this.notif.requestNotifications()\n    } \n    let obj = {\n      settings: {\n        notifications: this.resources.notification ? this.resources.notification : false,\n        dark: this.resources.darkMode ? this.resources.darkMode : false\n      }\n    }\n    console.log(obj)\n    this.resources.updateSettings(obj)\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"settings-settings-module-es5.js"}